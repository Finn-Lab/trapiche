# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/01.12_LLM_layer.ipynb.

# %% auto 0
__all__ = ['TAG', 'DATA_DIR', 'TMP_DIR', 'gpus', 'model_name', 'original_model', 'tokenizer', 'model', 'prompt_tree',
           'terrestrial_features', 'animal_features', 'APENDIX', 'ENA_API', 'set_piority_terms', 'min_annots',
           'mgnify_mixed_predictions_file', 'llm_work', 'navigate_tree', 'get_lineages', 'lineages_from_text',
           'get_text_from_enaapi', 'get_acc_desc']

# %% ../nbs/01.12_LLM_layer.ipynb 3
import glob
import os
import json
import re
import pandas as pd
import numpy as np
from tqdm import tqdm
# from tabulate import tabulate
import requests
from ssfMiscUtilities.generic import *
# from mg_toolkit.metadata import OriginalMetadata
import xml.etree.ElementTree as ET

from . import config

# %% ../nbs/01.12_LLM_layer.ipynb 4
from . import taxonomyTree
from .baseData import analysis_df
from .goldOntologyAmendments import biome_herarchy_dct
# from trapiche.deep_pred import biome_herarchy_dct

# %% ../nbs/01.12_LLM_layer.ipynb 6
from .goldOntologyAmendments import biome_original_graph,biome_graph,gold_categories

# %% ../nbs/01.12_LLM_layer.ipynb 7
TAG = 'llm_layer'

# %% ../nbs/01.12_LLM_layer.ipynb 8
DATA_DIR = f"{config.basedir}/data/{TAG}"

# %% ../nbs/01.12_LLM_layer.ipynb 9
os.makedirs(DATA_DIR,exist_ok=True)

# %% ../nbs/01.12_LLM_layer.ipynb 10
TMP_DIR = f"{DATA_DIR}/temp"

# %% ../nbs/01.12_LLM_layer.ipynb 18
# from datasets import load_dataset
from transformers import AutoModelForSeq2SeqLM, AutoTokenizer, GenerationConfig, TrainingArguments, Trainer
import torch
import gc
import time
import pandas as pd
import numpy as np

# %% ../nbs/01.12_LLM_layer.ipynb 19
gpus = torch.cuda.is_available()
print(f"GPUs available: {gpus}")
# cpus = False

# %% ../nbs/01.12_LLM_layer.ipynb 21
model_name='google/flan-t5-xxl'
original_model = AutoModelForSeq2SeqLM.from_pretrained(model_name, torch_dtype=torch.bfloat16)
tokenizer = AutoTokenizer.from_pretrained(model_name)

# %% ../nbs/01.12_LLM_layer.ipynb 22
model = original_model.to('cuda:0') if gpus ==True else original_model

# %% ../nbs/01.12_LLM_layer.ipynb 23
def _clean():
    """ function to free up memory if needed
    """
    del original_model
    del tokenizer
    del model
    if gpus==True:
        torch.cuda.empty_cache()
    gc.collect()
    print('cleaning finished')

    

# %% ../nbs/01.12_LLM_layer.ipynb 24
def llm_work(tokenizer,sentence,model,gpus=False,max_new_tokens=4):
    """ Function to assemble the components of LLM
    """
    
    if gpus==True:
    
        Tokenizer_output = tokenizer(sentence, return_tensors='pt').to('cuda:0')
        tokens_tensor = Tokenizer_output['input_ids'].to('cuda:0')
        
    else:
        
        inputs = tokenizer(sentence, return_tensors='pt')
        tokens_tensor = inputs["input_ids"]

    output = tokenizer.decode(
        model.generate(
            tokens_tensor,
            max_new_tokens=max_new_tokens,
        )[0], 
        skip_special_tokens=True
    )
    
    return output

# %% ../nbs/01.12_LLM_layer.ipynb 28
prompt_tree = {
"a":"""
Based on the sample description, is the metagenomic sample from: 
A) microbial communities primarily associated with humans or 
B) microbial communities primarily associated with non-human animals or
C) microbial communities of both humans and non-humans? 
Description: {}
""",
    
"b":"""
Based on the sample description, where do you think the sample is primarily from:
A) microbial communities or processes associated with mammals (e.g., humans, dogs, whales) or 
B) microbial communities linked with non-mammal animals (e.g., birds, reptiles, fish)?
Description: {}
""",
    
"c":"""
Based on the sample description, is the metagenomic sample from: 
A) microbial communities primarily in open marine or oceanic environments or 
B) microbial communities primarily associated with marine animals? 
Description: {}
""",
    

"e":"""
Based on the sample description, which environment is the sample primarily associated with:
A) microbial communities from freshwater ecosystems like lakes, rivers, or ponds or 
B) microbial communities or processes in wastewater treatment, sewage systems, or effluents, or
C) microbial communities in thermal springs or geothermal waters?
Description: {}
""",
    
"f":"""
Based on the provided description, is there reference that the sample originates from plants?
A) Yes
B) No
Description: {}
""",
    
"g":"""
Based on the sample description, which region do you think the sample primarily represents: 
A) microbial communities from the oral cavity (mouth) or 
B) microbial communities from the nasopharyngeal region (back of the nose and upper throat)? 
Description: {}
""",

"h":"""
Based on the sample description, where do you think the sample is mainly from: 
A) microbes generally linked with birds or 
B) microbes typically linked with insects or 
C) microbes often found with fish or
D) microbial communities linked with other animals?
Description: {}
""",

"i":"""
Based on the sample description, is the metagenomic sample from: 
A) microbial communities primarily from environmental sources, including aquatic, terrestrial, or air environments, or 
B) microbial communities primarily directly associated with hosts, such as animals (e.g., humans, dogs, insects, corals) or plants? 
C) microbial communities  associated with hosts, such as animals (e.g., humans, dogs, insects, corals) or plants; and microbial communities primarily from natural sources, including aquatic, terrestrial, or air environments? 
Description: {}
""",
    
"ia":"""
Based on the sample description, which category does the metagenomic sample best fit into?
A) microbial communities in the atmosphere, air, or ambient environment,
B) microbial communities in water-based habitats like aquatic environments, lakes, rivers, or oceans, or
C) microbial communities on land or terrestrial environments or
D) Microbial communities on land or terrestrial environments and water-based habitats like aquatic environments, lakes, rivers, or oceans?
Description: {}
""",
    
"iab":"""
Based on the sample description, where do you think the sample is mainly from: 
A) microbial communities primarily in marine or oceanic environments or 
B) microbial communities from estuaries (where rivers meet the sea) or
C) microbes typically found in non-marine salty water areas, like salt lakes or salt ponds, or
D) microbial communities from lentic or still water habitats (like ponds and lakes) or
E) microbial communities from freshwater ecosystems like lakes, rivers, or ponds or 
F) microbial communities in thermal springs or geothermal waters?

Description: {}
""",
    
"ib":"""
Based on the sample description, is the metagenomic sample from: 
A) microbial communities primarily associated with animals (e.g., humans, dogs, insects, corals), or 
B) microbial communities primarily associated with plants, or 
C) microbial communities primarily associated with fungi?
Description: {}
""",
    
"j":"""
Based on the provided description, from which source do you believe the sample predominantly originates:
A) microbial communities associated with food production or processing, including items such as cheese, dairy products, fermented foods, and other edibles,
B) microbial communities or processes from wastewater treatments, sewage systems, or related waste management systems,
C) microbial communities from settings like bioreactors or other similar technological environments, or
D) microbial communities from natural sources, either environmental or directly from hosts such as animals or plants?
Description: {}"""
}

# %% ../nbs/01.12_LLM_layer.ipynb 29
terrestrial_features = {
  "Agricultural field": "Based on the sample description, does the metagenomic sample contain microbial communities in an agricultural field, areas typically used for farming and cultivation?",
  "Asphalt lakes": "Based on the sample description, does the metagenomic sample contain microbial communities in asphalt lakes, environments rich in natural bitumen deposits?",
  "Deep subsurface": "Based on the sample description, does the metagenomic sample contain microbial communities in the deep subsurface, locations beneath the earth's surface that are often extreme environments?",
  "Geologic": "Based on the sample description, does the metagenomic sample contain microbial communities in geologic settings, areas characterized by significant geological features?",
  "Oil reservoir": "Based on the sample description, does the metagenomic sample contain microbial communities in oil reservoirs, ecosystems affected by the presence of crude oil?",
  "Rock-dwelling": "Based on the sample description, does the metagenomic sample contain microbial communities that are rock-dwelling, also known as subaerial biofilms, which live on the surfaces of rocks?",
  "Soil": "Based on the sample description, does the metagenomic sample contain microbial communities in soil, a natural body that comprises the pedosphere?",
  "Volcanic": "Based on the sample description, does the metagenomic sample contain microbial communities in volcanic environments, areas influenced by volcanic activity?",
  "Tar": "Based on the sample description, does the metagenomic sample contain microbial communities in tar, typically found in environments with natural deposits of this viscous organic material?",
  "Clay": "Based on the sample description, does the metagenomic sample contain microbial communities in clay, a finely-grained natural soil material?",
  "Mine": "Based on the sample description, does the metagenomic sample contain microbial communities in mine environments, areas extracted for minerals?",
  "Agricultural": "Based on the sample description, does the metagenomic sample contain microbial communities in agricultural environments, where active farming or livestock breeding is present?",
  "Boreal forest": "Based on the sample description, does the metagenomic sample contain microbial communities in boreal forests, also known as taiga, a biome characterized by coniferous forests?",
  "Contaminated": "Based on the sample description, does the metagenomic sample contain microbial communities in contaminated environments, areas that have been exposed to pollutants?",
  "Crop": "Based on the sample description, does the metagenomic sample contain microbial communities associated with crops, specifically within cultivated plants used for agriculture?",
  "Desert": "Based on the sample description, does the metagenomic sample contain microbial communities in desert environments, regions with very low precipitation?",
  "Forest soil": "Based on the sample description, does the metagenomic sample contain microbial communities in forest soil, the earth found beneath forested areas?",
  "Grasslands": "Based on the sample description, does the metagenomic sample contain microbial communities in grasslands, areas where grasses are the dominant vegetation?",
  "Loam": "Based on the sample description, does the metagenomic sample contain microbial communities in loam, soil composed mostly of sand and silt, and a smaller amount of clay?",
  "Mine drainage": "Based on the sample description, does the metagenomic sample contain microbial communities in mine drainage, waters that flow from mining sites?",
  "Oil-contaminated": "Based on the sample description, does the metagenomic sample contain microbial communities in oil-contaminated environments, areas polluted by petroleum hydrocarbons?",
  "Permafrost": "Based on the sample description, does the metagenomic sample contain microbial communities in permafrost, soil at or below the freezing point of water for two or more years?",
  "Sand": "Based on the sample description, does the metagenomic sample contain microbial communities in sandy environments, typically loose granular substances?",
  "Shrubland": "Based on the sample description, does the metagenomic sample contain microbial communities in shrubland, an area dominated by woody shrubs?",
  "Silt": "Based on the sample description, does the metagenomic sample contain microbial communities in silt, fine-grained soil that can be carried by moving waters?",
  "Tropical rainforest": "Based on the sample description, does the metagenomic sample contain microbial communities in tropical rainforests, dense forests found in areas with heavy rainfall?",
  "Uranium contaminated": "Based on the sample description, does the metagenomic sample contain microbial communities in radioactive contaminated environments, areas that have been exposed to radioactive substances?",
  # "Radioactive contaminated": "Based on the sample description, does the metagenomic sample contain microbial communities in radioactive contaminated environments, areas that have been exposed to radioactive substances?",
  "Wetlands": "Based on the sample description, does the metagenomic sample contain microbial communities in wetlands, environments such as swamps or marshes that are saturated with water?"
}

# %% ../nbs/01.12_LLM_layer.ipynb 30
animal_features={
  "Circulatory system": "Based on the sample description, is the metagenomic sample from microbial communities in the circulatory system, such as those found within blood or associated with the heart and blood vessels?",
  "Oral": "Based on the sample description, is the metagenomic sample from microbial communities in the oral biome, including those found in the mouth, saliva, or on teeth and gums?",
  "Skin": "Based on the sample description, is the metagenomic sample from microbial communities in the skin biome, encompassing those from surface epidermis, hair follicles, or sweat glands?",
  "Pulmonary system": "Based on the sample description, is the metagenomic sample from microbial communities in the pulmonary system, including those from the lungs, bronchi, or trachea?",
  "Nasopharyngeal": "Based on the sample description, is the metagenomic sample from microbial communities in the nasopharyngeal region, including those found in the nasal passages and the upper throat?",
  "Vagina": "Based on the sample description, is the metagenomic sample from microbial communities in the vaginal biome, including those that are part of the normal flora or associated with reproductive tissues?",
  "Urethra": "Based on the sample description, is the metagenomic sample from microbial communities in the urethral biome, such as those found within or around the urethral tract?",
  "Nervous system": "Based on the sample description, is the metagenomic sample from microbial communities in the nervous system, including those found in or around the brain, spinal cord, or peripheral nerves?",
  "Lymph nodes": "Based on the sample description, is the metagenomic sample from microbial communities in lymph nodes, including those involved in the immune response or lymphatic circulation?",
  "Fossil": "Based on the sample description, is the metagenomic sample from microbial communities found in fossils, such as those preserved in ancient biological material?",
  "Digestive system": "Based on the sample description, is the metagenomic sample from microbial communities in the digestive system, including those in the stomach, gut, intestines, or associated with digestive tissues?",
  "Milk": "Based on the sample description, is the metagenomic sample from microbial communities in milk, including those found in lactating mammary glands or associated with dairy products?"
}

# %% ../nbs/01.12_LLM_layer.ipynb 31
APENDIX = """
A) Yes, or
b) No?
Description: {}
"""

# %% ../nbs/01.12_LLM_layer.ipynb 38
def navigate_tree(term,description):
    """ Given a term navigate the question tree, to find potential confusions
    """
    worked = None
    result = {}
    if worked in [None]:
        _asw = llm_work(tokenizer,prompt_tree['j'].format(description),model,gpus=gpus)
        _asw = _asw.strip(')').upper()
        if _asw=='A':result.setdefault('Food production',[])
        if _asw=='B':result.setdefault('Wastewater',[])
        if _asw=='C':result.setdefault('Bioreactor',[])
        if _asw=='D':
            _asw2 = llm_work(tokenizer,prompt_tree['i'].format(description),model,gpus=gpus)
            _asw2 = _asw2.strip(')').upper()
            if _asw2=='C':
                result.setdefault('Environmental',[])
                result.setdefault('Host-associated',[])
            if _asw2=='A':
                result.setdefault('Environmental',[])
            if _asw2=='B':
                result.setdefault('Host-associated',[])
                
            if 'Environmental' in result:
                _asw3 = llm_work(tokenizer,prompt_tree['ia'].format(description),model,gpus=gpus)
                _asw3 = _asw3.strip(')').upper()
                if _asw3=='A':
                    result.setdefault('Air',[])
                if _asw3=='B':
                    result.setdefault('Aquatic',[])
                if _asw3=='C':
                    result.setdefault('Terrestrial',[])
                    _asw31 = llm_work(tokenizer,prompt_tree['f'].format(description),model,gpus=gpus)
                    if _asw31=='A':
                        result.setdefault('Host-associated',[])
                        result.setdefault('Plants',[])
                if _asw3=='D':
                    result.setdefault('Aquatic',[])
                    result.setdefault('Terrestrial',[])

                
                if 'Aquatic' in result:
                    _asw4 = llm_work(tokenizer,prompt_tree['iab'].format(description),model,gpus=gpus)
                    _asw4 = _asw4.strip(')').upper()
                    if _asw4=='A':result.setdefault('Marine',[])
                    if _asw4=='B':result.setdefault('Estuary',[])
                    if _asw4=='C':result.setdefault('Non-marine Saline and Alkaline',[])
                    if _asw4=='D':result.setdefault('Lentic',[])
                    if _asw4=='E':result.setdefault('Freshwater',[])
                    if _asw4=='F':result.setdefault('Thermal springs',[])
                    
            if 'Host-associated' in result:
                _asw2 = llm_work(tokenizer,prompt_tree['ib'].format(description),model,gpus=gpus)
                _asw2 = _asw2.strip(')').upper()
                if _asw2=='A':result.setdefault('Animal',[])
                if _asw2=='B':result.setdefault('Plants',[])
                if _asw2=='C':result.setdefault('Fungi',[])
                
        
    
    if 'Animal' in result:
        _asw = llm_work(tokenizer,prompt_tree['a'].format(description),model,gpus=gpus)
        _asw = _asw.strip(')').upper()
        if _asw=='A':result.setdefault('Human',[])
        if _asw=='B':result.setdefault('Non-Defined',[])
        if _asw=='C':
            result.setdefault('Human',[])
            result.setdefault('Non-Defined',[])
        
        
        if 'Non-Defined' in result:
            _asw2 = llm_work(tokenizer,prompt_tree['b'].format(description),model,gpus=gpus)
            _asw2 = _asw2.strip(')').upper()
            
            if _asw2=='A':
                result.setdefault('Non-Human',[])
                del result['Non-Defined']
    
        if 'Non-Defined' in result:
            _asw3 = llm_work(tokenizer,prompt_tree['h'].format(description),model,gpus=gpus)
            _asw3 = _asw3.strip(')').upper()
            
            if _asw3=='A':result.setdefault('Birds',[])
            if _asw3=='B':result.setdefault('Insecta',[])
            if _asw3=='C':result.setdefault('Fish',[])
            if _asw2=='D':
                None
            else:
                del result['Non-Defined']

    if 'Terrestrial' in result:
        for feat,question in terrestrial_features.items():
            prompt = f"{question}{APENDIX}".format(description)
            asw = llm_work(tokenizer,prompt,model,gpus=gpus)
            asw = asw.strip(')').upper()
            if asw=='A':
                result['Terrestrial'].append(feat)
            
    if 'Animal' in result:
        for feat,question in animal_features.items():
            prompt = f"{question}{APENDIX}".format(description)
            asw = llm_work(tokenizer,prompt,model,gpus=gpus)
            asw = asw.strip(')').upper()
            # print(feature,asw)
            if asw=='A':
                for k in {'Human','Non-Human','Non-Defined','Birds','Fish','Insecta'}:
                    if k in result:result[k].append(feat)
    ### clean
    for k in {'Animal','Host-associated','Environmental','Aquatic'}:
        if k in result:del result[k]
    return result

# %% ../nbs/01.12_LLM_layer.ipynb 39
def get_lineages(dct):
    """ function to retun amended lineages from the resulting dictionary of the tree navigation
    """
    lineages = []
    for k,v in dct.items():
        if len(v) ==0:
            lin = [l for l in biome_herarchy_dct.values() if k in l.split(":")[-1]][0]
            lineages.append(lin)
        else:
            for _k in v:
                try:
                    lin = [l for l in biome_herarchy_dct.values() if k in l and _k in l.split(":")[-1]][0]
                except:
                    lin = [l for l in biome_herarchy_dct.values() if k in l.split(":")[-1] ][0]
                lineages.append(lin)
    return lineages

# %% ../nbs/01.12_LLM_layer.ipynb 40
def lineages_from_text(description):
    """ finction to use in cli and modules to predict biome lineages base on text description
    """
    bimoes_dct = navigate_tree(None,description)
    results = get_lineages(bimoes_dct)
    return results
    

# %% ../nbs/01.12_LLM_layer.ipynb 42
ENA_API =False
def get_text_from_enaapi(
    accession:list # list of accessions with TITLE and DESCRIOTION fields in XML from ENA API
                        ):
    """ DOWNLOAD TEXT DESCRIPTIONS USING ENA API
    """
    project = ""

    exit_bag = set()

    for ACC in accession:
        exit_flag = False

        # try:
        while exit_flag==False:
            exit_bag.update({ACC})
            _dct = {}
            xml_content = get_acc_desc(ACC).replace("\n",'')
            root = ET.fromstring(xml_content)
            for lf in ['TITLE', 'DESCRIPTION']:
                try:
                    project = project + '.' f'{root.find(f".//{lf}").text}'
                except:
                    None
            still = {x for x in project.split() if 'PRJ' == x[:3]} - exit_bag ### ADD PROJECTS DESCRIPTIONS EMBEDDED IN DESCIPRION

            if len(still)==0:
                exit_flag=True
            else:
                ACC=list(still)[0]
                exit_bag.update({ACC})

    return project

def get_acc_desc(acc):
    url = "https://www.ebi.ac.uk/ena/browser/api/xml/{}?download=false".format(acc)

    response = requests.get(url)
    if response.status_code == 200:
        xml_content = response.text
        return xml_content
    # return response
    else:
        return

# %% ../nbs/01.12_LLM_layer.ipynb 67
set_piority_terms = {'Agricultural', 'Agricultural field', 'Air', 'Amphibia', 'Annelida', 'Arthropoda', 'Asphalt lakes', 'Bioreactor', 'Birds', 'Boreal forest', 'Bryozoans', 'Circulatory system', 'Clay', 'Cnidaria', 'Contaminated', 'Crop', 'Deep subsurface', 'Desert', 'Digestive system', 'Echinodermata', 'Estuary', 'Fish', 'Food production', 'Forest soil', 'Fossil', 'Freshwater', 'Fungi', 'Gastrointestinal tract', 'Geologic', 'Grasslands', 'Human', 'Insecta', 'Lentic', 'Loam', 'Lymph nodes', 'Marine', 'Milk', 'Mine', 'Mine drainage', 'Mollusca', 'Nasopharyngeal', 'Nervous system', 'Non-Defined', 'Non-Human', 'Non-marine Saline and Alkaline', 'Oil reservoir', 'Oil-contaminated', 'Oral', 'Permafrost', 'Phylloplane', 'Plants', 'Porifera', 'Pulmonary system', 'Reptile', 'Rhizome', 'Rhizoplane', 'Rhizosphere', 'Rock-dwelling', 'Sand', 'Sediment', 'Shrubland', 'Silt', 'Skin', 'Soil', 'Tar', 'Terrestrial', 'Thermal springs', 'Tropical rainforest', 'Tunicates', 'Uranium contaminated', 'Urethra', 'Vagina', 'Volcanic', 'Wastewater', 'Wetlands'} 
min_annots = {
    'root:Engineered:Biogas plant',
    'root:Engineered:Bioreactor',
    'root:Engineered:Food production',
    'root:Engineered:Solid waste',
    'root:Engineered:Wastewater',
    'root:Environmental:Air',
    'root:Host-associated:Algae',
    'root:Host-associated:Cnidaria',
    'root:Host-associated:Echinodermata',
    'root:Host-associated:Fungi',
    'root:Host-associated:Porifera',
    'root:Environmental:Aquatic:Aquaculture',
    'root:Environmental:Aquatic:Estuary',
    'root:Environmental:Aquatic:Freshwater',
    'root:Environmental:Aquatic:Lentic',
    'root:Environmental:Aquatic:Marine',
    'root:Environmental:Aquatic:Meromictic lake',
    'root:Environmental:Aquatic:Non-marine Saline and Alkaline',
    'root:Environmental:Aquatic:Sediment',
    'root:Environmental:Aquatic:Thermal springs',
    'root:Environmental:Terrestrial',
    'root:Host-associated:Amphibia',
    'root:Host-associated:Animal:Circulatory system',
    'root:Host-associated:Animal:Digestive system',
    'root:Host-associated:Animal:Fossil',
    'root:Host-associated:Animal:Reproductive system',
    'root:Host-associated:Animal:Respiratory system',
    'root:Host-associated:Animal:Skin',
    'root:Host-associated:Annelida:Digestive system',
    'root:Host-associated:Annelida:Integument',
    'root:Host-associated:Annelida:Intracellular endosymbionts',
    'root:Host-associated:Annelida:Reproductive system',
    'root:Host-associated:Arthropoda:Digestive system',
    'root:Host-associated:Arthropoda:Integument',
    'root:Host-associated:Arthropoda:Intracellular endosymbionts',
    'root:Host-associated:Arthropoda:Oral cavity',
    'root:Host-associated:Arthropoda:Respiratory system',
    'root:Host-associated:Arthropoda:Symbiotic fungal gardens and galleries',
    'root:Host-associated:Arthropoda:Venom gland',
    'root:Host-associated:Birds:Circulatory system',
    'root:Host-associated:Birds:Digestive system',
    'root:Host-associated:Birds:Reproductive system',
    'root:Host-associated:Birds:Respiratory system',
    'root:Host-associated:Fish:Circulatory system',
    'root:Host-associated:Fish:Digestive system',
    'root:Host-associated:Fish:Excretory system',
    'root:Host-associated:Fish:Reproductive system',
    'root:Host-associated:Fish:Skin',
    'root:Host-associated:Human:Circulatory system',
    'root:Host-associated:Human:Digestive system',
    'root:Host-associated:Human:Excretory system',
    'root:Host-associated:Human:Fossil',
    'root:Host-associated:Human:Lympathic system',
    'root:Host-associated:Human:Milk',
    'root:Host-associated:Human:Nervous system',
    'root:Host-associated:Human:Reproductive system',
    'root:Host-associated:Human:Respiratory system',
    'root:Host-associated:Human:Skin',
    'root:Host-associated:Insecta:Digestive system',
    'root:Host-associated:Invertebrates:Bryozoans',
    'root:Host-associated:Invertebrates:Cnidaria',
    'root:Host-associated:Invertebrates:Echinodermata',
    'root:Host-associated:Mammals:Circulatory system',
    'root:Host-associated:Mammals:Digestive system',
    'root:Host-associated:Mammals:Excretory system',
    'root:Host-associated:Mammals:Gastrointestinal tract',
    'root:Host-associated:Mammals:Lymphatic',
    'root:Host-associated:Mammals:Milk',
    'root:Host-associated:Mammals:Nervous system',
    'root:Host-associated:Mammals:Reproductive system',
    'root:Host-associated:Mammals:Respiratory system',
    'root:Host-associated:Mammals:Skin',
    'root:Host-associated:Microbial:Bacteria',
    'root:Host-associated:Microbial:Dinoflagellates',
    'root:Host-associated:Mollusca:Digestive system',
    'root:Host-associated:Mollusca:Respiratory system',
    'root:Host-associated:Mollusca:Shell',
    'root:Host-associated:Plants',
    # 'root:Host-associated:Plants:Rhizome',
    # 'root:Host-associated:Plants:Rhizoplane',
    # 'root:Host-associated:Plants:Rhizosphere',
    # 'root:Host-associated:Plants:Root',
    'root:Host-associated:Reptile:Oral cavity',
    'root:Host-associated:Tunicates:Ascidians',
}

# %% ../nbs/01.12_LLM_layer.ipynb 87
mgnify_mixed_predictions_file = f"{DATA_DIR}/mgnify_mixed_predictions_file.tsv"
