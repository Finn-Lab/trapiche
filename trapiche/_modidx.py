# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/trapiche_dev',
                'doc_host': 'https://Finn-Lab.github.io',
                'git_url': 'https://github.com/Finn-Lab/trapiche_dev',
                'lib_path': 'trapiche'},
  'syms': { 'trapiche.baseData': { 'trapiche.baseData.diamond_read': ('01.00.01_basedata.html#diamond_read', 'trapiche/baseData.py'),
                                   'trapiche.baseData.krona_read': ('01.00.01_basedata.html#krona_read', 'trapiche/baseData.py'),
                                   'trapiche.baseData.tax_annotations_from_file': ( '01.00.01_basedata.html#tax_annotations_from_file',
                                                                                    'trapiche/baseData.py')},
            'trapiche.benchmark': {},
            'trapiche.biome2vec': { 'trapiche.biome2vec.get_mean': ('01.1_biome2vec.html#get_mean', 'trapiche/biome2vec.py'),
                                    'trapiche.biome2vec.get_terminals': ('01.1_biome2vec.html#get_terminals', 'trapiche/biome2vec.py'),
                                    'trapiche.biome2vec.load_biome2vec': ('01.1_biome2vec.html#load_biome2vec', 'trapiche/biome2vec.py'),
                                    'trapiche.biome2vec.load_full_vectors': ( '01.1_biome2vec.html#load_full_vectors',
                                                                              'trapiche/biome2vec.py'),
                                    'trapiche.biome2vec.sentence_vectorization': ( '01.1_biome2vec.html#sentence_vectorization',
                                                                                   'trapiche/biome2vec.py')},
            'trapiche.cli': { 'trapiche.cli.evidence_flag': ('cli.html#evidence_flag', 'trapiche/cli.py'),
                              'trapiche.cli.main': ('cli.html#main', 'trapiche/cli.py'),
                              'trapiche.cli.read_taxo_file_list': ('cli.html#read_taxo_file_list', 'trapiche/cli.py')},
            'trapiche.config': {},
            'trapiche.data.baseData.temp.tar_script': {},
            'trapiche.deep_pred': { 'trapiche.deep_pred.calculate_gr_macro_vec': ( '01.2_deep_pred.html#calculate_gr_macro_vec',
                                                                                   'trapiche/deep_pred.py'),
                                    'trapiche.deep_pred.calculate_gr_plus_sp_vec': ( '01.2_deep_pred.html#calculate_gr_plus_sp_vec',
                                                                                     'trapiche/deep_pred.py'),
                                    'trapiche.deep_pred.calculate_mean_gr_vec': ( '01.2_deep_pred.html#calculate_mean_gr_vec',
                                                                                  'trapiche/deep_pred.py'),
                                    'trapiche.deep_pred.chunked_fuzzy_prediction': ( '01.2_deep_pred.html#chunked_fuzzy_prediction',
                                                                                     'trapiche/deep_pred.py'),
                                    'trapiche.deep_pred.extract_taxo': ('01.2_deep_pred.html#extract_taxo', 'trapiche/deep_pred.py'),
                                    'trapiche.deep_pred.find_best_path': ('01.2_deep_pred.html#find_best_path', 'trapiche/deep_pred.py'),
                                    'trapiche.deep_pred.focal_loss_fixed': ( '01.2_deep_pred.html#focal_loss_fixed',
                                                                             'trapiche/deep_pred.py'),
                                    'trapiche.deep_pred.from_probs_to_pred': ( '01.2_deep_pred.html#from_probs_to_pred',
                                                                               'trapiche/deep_pred.py'),
                                    'trapiche.deep_pred.full_stack_prediction': ( '01.2_deep_pred.html#full_stack_prediction',
                                                                                  'trapiche/deep_pred.py'),
                                    'trapiche.deep_pred.generate_all_combinations': ( '01.2_deep_pred.html#generate_all_combinations',
                                                                                      'trapiche/deep_pred.py'),
                                    'trapiche.deep_pred.get_lineage_frquencies': ( '01.2_deep_pred.html#get_lineage_frquencies',
                                                                                   'trapiche/deep_pred.py'),
                                    'trapiche.deep_pred.get_species_from_diamond_set': ( '01.2_deep_pred.html#get_species_from_diamond_set',
                                                                                         'trapiche/deep_pred.py'),
                                    'trapiche.deep_pred.load_core_data': ('01.2_deep_pred.html#load_core_data', 'trapiche/deep_pred.py'),
                                    'trapiche.deep_pred.pc_deviation_consensus': ( '01.2_deep_pred.html#pc_deviation_consensus',
                                                                                   'trapiche/deep_pred.py'),
                                    'trapiche.deep_pred.predict_runs': ('01.2_deep_pred.html#predict_runs', 'trapiche/deep_pred.py'),
                                    'trapiche.deep_pred.process_diamond': ('01.2_deep_pred.html#process_diamond', 'trapiche/deep_pred.py'),
                                    'trapiche.deep_pred.process_get_average_embedd_macro_average_by_genus': ( '01.2_deep_pred.html#process_get_average_embedd_macro_average_by_genus',
                                                                                                              'trapiche/deep_pred.py'),
                                    'trapiche.deep_pred.process_krona': ('01.2_deep_pred.html#process_krona', 'trapiche/deep_pred.py'),
                                    'trapiche.deep_pred.refine_predictions_knn': ( '01.2_deep_pred.html#refine_predictions_knn',
                                                                                   'trapiche/deep_pred.py'),
                                    'trapiche.deep_pred.vectorise_run': ('01.2_deep_pred.html#vectorise_run', 'trapiche/deep_pred.py')},
            'trapiche.fuzzy_knn': { 'trapiche.fuzzy_knn.extract_taxo': ('02.05.01_fuzzy_knn.html#extract_taxo', 'trapiche/fuzzy_knn.py'),
                                    'trapiche.fuzzy_knn.get_best_shot': ('02.05.01_fuzzy_knn.html#get_best_shot', 'trapiche/fuzzy_knn.py'),
                                    'trapiche.fuzzy_knn.get_genus': ('02.05.01_fuzzy_knn.html#get_genus', 'trapiche/fuzzy_knn.py'),
                                    'trapiche.fuzzy_knn.get_nodes_frquencies': ( '02.05.01_fuzzy_knn.html#get_nodes_frquencies',
                                                                                 'trapiche/fuzzy_knn.py'),
                                    'trapiche.fuzzy_knn.get_species_from_diamond_set': ( '02.05.01_fuzzy_knn.html#get_species_from_diamond_set',
                                                                                         'trapiche/fuzzy_knn.py'),
                                    'trapiche.fuzzy_knn.get_top_k': ('02.05.01_fuzzy_knn.html#get_top_k', 'trapiche/fuzzy_knn.py'),
                                    'trapiche.fuzzy_knn.get_top_k_function': ( '02.05.01_fuzzy_knn.html#get_top_k_function',
                                                                               'trapiche/fuzzy_knn.py'),
                                    'trapiche.fuzzy_knn.jacc_knn': ('02.05.01_fuzzy_knn.html#jacc_knn', 'trapiche/fuzzy_knn.py'),
                                    'trapiche.fuzzy_knn.predict_runs': ('02.05.01_fuzzy_knn.html#predict_runs', 'trapiche/fuzzy_knn.py'),
                                    'trapiche.fuzzy_knn.process_diamond': ( '02.05.01_fuzzy_knn.html#process_diamond',
                                                                            'trapiche/fuzzy_knn.py'),
                                    'trapiche.fuzzy_knn.process_get_average_embedd_macro_average_by_genus': ( '02.05.01_fuzzy_knn.html#process_get_average_embedd_macro_average_by_genus',
                                                                                                              'trapiche/fuzzy_knn.py'),
                                    'trapiche.fuzzy_knn.process_krona': ('02.05.01_fuzzy_knn.html#process_krona', 'trapiche/fuzzy_knn.py'),
                                    'trapiche.fuzzy_knn.weighted_jaccard': ( '02.05.01_fuzzy_knn.html#weighted_jaccard',
                                                                             'trapiche/fuzzy_knn.py')},
            'trapiche.goldOntologyAmendments': {},
            'trapiche.knn_cosine': { 'trapiche.knn_cosine.calculate_gr_macro_vec': ( '01.2_knn_cosine_figure.html#calculate_gr_macro_vec',
                                                                                     'trapiche/knn_cosine.py'),
                                     'trapiche.knn_cosine.calculate_gr_plus_sp_vec': ( '01.2_knn_cosine_figure.html#calculate_gr_plus_sp_vec',
                                                                                       'trapiche/knn_cosine.py'),
                                     'trapiche.knn_cosine.calculate_mean_gr_vec': ( '01.2_knn_cosine_figure.html#calculate_mean_gr_vec',
                                                                                    'trapiche/knn_cosine.py'),
                                     'trapiche.knn_cosine.chunked_fuzzy_prediction': ( '01.2_knn_cosine_figure.html#chunked_fuzzy_prediction',
                                                                                       'trapiche/knn_cosine.py'),
                                     'trapiche.knn_cosine.extract_taxo': ( '01.2_knn_cosine_figure.html#extract_taxo',
                                                                           'trapiche/knn_cosine.py'),
                                     'trapiche.knn_cosine.fuzzy_prediction': ( '01.2_knn_cosine_figure.html#fuzzy_prediction',
                                                                               'trapiche/knn_cosine.py'),
                                     'trapiche.knn_cosine.get_best_shot': ( '01.2_knn_cosine_figure.html#get_best_shot',
                                                                            'trapiche/knn_cosine.py'),
                                     'trapiche.knn_cosine.get_nodes_frquencies': ( '01.2_knn_cosine_figure.html#get_nodes_frquencies',
                                                                                   'trapiche/knn_cosine.py'),
                                     'trapiche.knn_cosine.get_species_from_diamond_set': ( '01.2_knn_cosine_figure.html#get_species_from_diamond_set',
                                                                                           'trapiche/knn_cosine.py'),
                                     'trapiche.knn_cosine.get_top_k': ('01.2_knn_cosine_figure.html#get_top_k', 'trapiche/knn_cosine.py'),
                                     'trapiche.knn_cosine.load_core_data': ( '01.2_knn_cosine_figure.html#load_core_data',
                                                                             'trapiche/knn_cosine.py'),
                                     'trapiche.knn_cosine.predict_runs': ( '01.2_knn_cosine_figure.html#predict_runs',
                                                                           'trapiche/knn_cosine.py'),
                                     'trapiche.knn_cosine.process_diamond': ( '01.2_knn_cosine_figure.html#process_diamond',
                                                                              'trapiche/knn_cosine.py'),
                                     'trapiche.knn_cosine.process_get_average_embedd_macro_average_by_genus': ( '01.2_knn_cosine_figure.html#process_get_average_embedd_macro_average_by_genus',
                                                                                                                'trapiche/knn_cosine.py'),
                                     'trapiche.knn_cosine.process_krona': ( '01.2_knn_cosine_figure.html#process_krona',
                                                                            'trapiche/knn_cosine.py'),
                                     'trapiche.knn_cosine.vectorise_run': ( '01.2_knn_cosine_figure.html#vectorise_run',
                                                                            'trapiche/knn_cosine.py'),
                                     'trapiche.knn_cosine.weighted_jaccard': ( '01.2_knn_cosine_figure.html#weighted_jaccard',
                                                                               'trapiche/knn_cosine.py')},
            'trapiche.knn_jaccard': { 'trapiche.knn_jaccard.get_g_sets': ('02.05.1_knn_jaccard.html#get_g_sets', 'trapiche/knn_jaccard.py'),
                                      'trapiche.knn_jaccard.get_nodes_frquencies': ( '02.05.1_knn_jaccard.html#get_nodes_frquencies',
                                                                                     'trapiche/knn_jaccard.py'),
                                      'trapiche.knn_jaccard.get_top_k': ('02.05.1_knn_jaccard.html#get_top_k', 'trapiche/knn_jaccard.py'),
                                      'trapiche.knn_jaccard.kkn_jaccard': ( '02.05.1_knn_jaccard.html#kkn_jaccard',
                                                                            'trapiche/knn_jaccard.py')},
            'trapiche.llm_layer': { 'trapiche.llm_layer._clean': ('01.12_llm_layer.html#_clean', 'trapiche/llm_layer.py'),
                                    'trapiche.llm_layer.get_acc_desc': ('01.12_llm_layer.html#get_acc_desc', 'trapiche/llm_layer.py'),
                                    'trapiche.llm_layer.get_lineages': ('01.12_llm_layer.html#get_lineages', 'trapiche/llm_layer.py'),
                                    'trapiche.llm_layer.get_text_from_enaapi': ( '01.12_llm_layer.html#get_text_from_enaapi',
                                                                                 'trapiche/llm_layer.py'),
                                    'trapiche.llm_layer.lineages_from_text': ( '01.12_llm_layer.html#lineages_from_text',
                                                                               'trapiche/llm_layer.py'),
                                    'trapiche.llm_layer.llm_work': ('01.12_llm_layer.html#llm_work', 'trapiche/llm_layer.py'),
                                    'trapiche.llm_layer.navigate_tree': ('01.12_llm_layer.html#navigate_tree', 'trapiche/llm_layer.py')},
            'trapiche.mgnify_analysis': {},
            'trapiche.taxonomyTree': { 'trapiche.taxonomyTree.get_subgraph': ( '01.00.02_taxonomytree.html#get_subgraph',
                                                                               'trapiche/taxonomyTree.py'),
                                       'trapiche.taxonomyTree.get_terminal_nodes': ( '01.00.02_taxonomytree.html#get_terminal_nodes',
                                                                                     'trapiche/taxonomyTree.py')},
            'trapiche.utils': { 'trapiche.utils.build_bayesian_onto': ('00.0.1_utils.html#build_bayesian_onto', 'trapiche/utils.py'),
                                'trapiche.utils.cosine_similarity': ('00.0.1_utils.html#cosine_similarity', 'trapiche/utils.py'),
                                'trapiche.utils.cosine_similarity_pairwise': ( '00.0.1_utils.html#cosine_similarity_pairwise',
                                                                               'trapiche/utils.py'),
                                'trapiche.utils.fbeta_score': ('00.0.1_utils.html#fbeta_score', 'trapiche/utils.py'),
                                'trapiche.utils.fetch_data_from_ebi': ('00.0.1_utils.html#fetch_data_from_ebi', 'trapiche/utils.py'),
                                'trapiche.utils.find_common_lineage': ('00.0.1_utils.html#find_common_lineage', 'trapiche/utils.py'),
                                'trapiche.utils.get_project_text_description': ( '00.0.1_utils.html#get_project_text_description',
                                                                                 'trapiche/utils.py'),
                                'trapiche.utils.i_T': ('00.0.1_utils.html#i_t', 'trapiche/utils.py'),
                                'trapiche.utils.ia_v': ('00.0.1_utils.html#ia_v', 'trapiche/utils.py'),
                                'trapiche.utils.info_theoretic_metrics': ('00.0.1_utils.html#info_theoretic_metrics', 'trapiche/utils.py'),
                                'trapiche.utils.jaccard_similarity': ('00.0.1_utils.html#jaccard_similarity', 'trapiche/utils.py'),
                                'trapiche.utils.jsonCompressed': ('00.0.1_utils.html#jsoncompressed', 'trapiche/utils.py'),
                                'trapiche.utils.jsonCompressed.__init__': ( '00.0.1_utils.html#jsoncompressed.__init__',
                                                                            'trapiche/utils.py'),
                                'trapiche.utils.jsonCompressed.dump': ('00.0.1_utils.html#jsoncompressed.dump', 'trapiche/utils.py'),
                                'trapiche.utils.jsonCompressed.read': ('00.0.1_utils.html#jsoncompressed.read', 'trapiche/utils.py'),
                                'trapiche.utils.longest_matching_string': ( '00.0.1_utils.html#longest_matching_string',
                                                                            'trapiche/utils.py'),
                                'trapiche.utils.match_metrics': ('00.0.1_utils.html#match_metrics', 'trapiche/utils.py'),
                                'trapiche.utils.parse_diamond': ('00.0.1_utils.html#parse_diamond', 'trapiche/utils.py'),
                                'trapiche.utils.parse_otus_count': ('00.0.1_utils.html#parse_otus_count', 'trapiche/utils.py'),
                                'trapiche.utils.rand_cmap': ('00.0.1_utils.html#rand_cmap', 'trapiche/utils.py'),
                                'trapiche.utils.roc_preds': ('00.0.1_utils.html#roc_preds', 'trapiche/utils.py'),
                                'trapiche.utils.sanity_check_diamond_annot_file': ( '00.0.1_utils.html#sanity_check_diamond_annot_file',
                                                                                    'trapiche/utils.py'),
                                'trapiche.utils.sanity_check_otus_annot_file': ( '00.0.1_utils.html#sanity_check_otus_annot_file',
                                                                                 'trapiche/utils.py'),
                                'trapiche.utils.semantic_distance': ('00.0.1_utils.html#semantic_distance', 'trapiche/utils.py'),
                                'trapiche.utils.set_info_theoretic_metrics': ( '00.0.1_utils.html#set_info_theoretic_metrics',
                                                                               'trapiche/utils.py'),
                                'trapiche.utils.split_tt': ('00.0.1_utils.html#split_tt', 'trapiche/utils.py'),
                                'trapiche.utils.subsamp': ('00.0.1_utils.html#subsamp', 'trapiche/utils.py'),
                                'trapiche.utils.three_split': ('00.0.1_utils.html#three_split', 'trapiche/utils.py')}}}
